#!/bin/sh
set -e

# Load the configuration
if ! ./configure; then
  echo There was an error in the configuration file
  exit 1
fi

# Required packages
pkgs='security/openssl devel/git-base www/nginx'

# Optional packages
# 
# Tom likes these when he's in a shell,
# but you don't really need them.
if optional; then
  echo 'ACCEPTABLE_LICENSES+= vim-license' >> /etc/mk.conf
  pkgs="$pkgs editors/vim shells/tmux"
fi

# Run the install.
for pkg in $pkgs; do
  pkg_info $(echo $pkg|cut -d/ -f2) > /dev/null ||
  (
    cd /usr/pkgsrc/$pkg
    make install
  )
done

# Configure nginx
cp /usr/pkg/share/examples/rc.d/nginx /etc/rc.d/nginx
echo 'nginx=YES' >> /etc/rc.conf

echo '/var/log/nginx/access.log nginx:nginx 640 7 * 24 Z  /var/run/nginx.pid SIGUSR1
/var/log/nginx/error.log  nginx:nginx 640 7 * 24 Z  /var/run/nginx.pid SIGUSR1' >> /etc/newsyslog.conf

nginx_config_directory=/usr/pkg/etc/nginx
mv "$nginx_config_directory"/nginx.conf "$nginx_config_directory"/nginx.conf.bak
mkdir -p "$nginx_config_directory"/conf.d
echo "
user   nginx  nginx;
worker_processes  1;
events {
    worker_connections  1024;
}
http {
    include            $nginx_config_directory/mime.types;
    default_type       application/octet-stream;
    sendfile           on;
    gzip               on;
    keepalive_timeout  65;
    server {
        listen 80;
        server_name localhost;
        include $nginx_config_directory/conf.d/*;
        location / {
             root /home;
             index index.html index.htm index.csv index;
        }
        location ~^/[^/]*/.git/.* {
            # Don't serve these tiny git files.
        }
    }
}
" > "$nginx_config_directory"/nginx.conf

/etc/rc.d/nginx start

# Make the tlevine group if it doesn't exist.
if ! gid=$(groupinfo tlevine | grep ^gid | cut -f2); then
    gid=888
    groupadd -g $gid
    rmdir /home
fi

# Make the users
if ! userinfo tlevine; then
  useradd -m -g $gid -d /home tlevine
fi
if ! userinfo _; then
  useradd -m -g $gid -b /home _
fi
chmod g+w /home/_
